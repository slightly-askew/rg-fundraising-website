//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
  form: Scalars['JSON'];
  values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getDocumentFields: Scalars['JSON'];
  getPageDocument: PageDocument;
  getPageList: PageConnection;
  getLegalDocument: LegalDocument;
  getLegalList: LegalConnection;
};


export type QueryGetCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetPageDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetPageListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetLegalDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetLegalListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};

export type DocumentNode = PageDocument | LegalDocument;

export type PageSeo_Data = {
  __typename?: 'PageSeo_data';
  meta_title?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_canonical?: Maybe<Scalars['String']>;
};

export type PageHero = {
  __typename?: 'PageHero';
  hero_heading?: Maybe<Scalars['String']>;
  hero_description?: Maybe<Scalars['JSON']>;
  hero_button_text?: Maybe<Scalars['String']>;
};

export type PageBlocksCall_To_Action = {
  __typename?: 'PageBlocksCall_to_action';
  heading?: Maybe<Scalars['String']>;
  button_text?: Maybe<Scalars['String']>;
};

export type PageBlocksMeet_The_TeamTeam_Members = {
  __typename?: 'PageBlocksMeet_the_teamTeam_members';
  name?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  avatar?: Maybe<Scalars['String']>;
};

export type PageBlocksMeet_The_Team = {
  __typename?: 'PageBlocksMeet_the_team';
  heading?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  team_members?: Maybe<Array<Maybe<PageBlocksMeet_The_TeamTeam_Members>>>;
};

export type PageBlocksOur_ServicesServices = {
  __typename?: 'PageBlocksOur_servicesServices';
  service_title?: Maybe<Scalars['String']>;
  service_description?: Maybe<Scalars['String']>;
};

export type PageBlocksOur_Services = {
  __typename?: 'PageBlocksOur_services';
  heading?: Maybe<Scalars['String']>;
  services_description?: Maybe<Scalars['JSON']>;
  services?: Maybe<Array<Maybe<PageBlocksOur_ServicesServices>>>;
  services_mission?: Maybe<Scalars['String']>;
};

export type PageBlocksPowered_By_Data = {
  __typename?: 'PageBlocksPowered_by_data';
  heading?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['JSON']>;
};

export type PageBlocksWho_We_Work_WithCharities = {
  __typename?: 'PageBlocksWho_we_work_withCharities';
  charity_name?: Maybe<Scalars['String']>;
  charity_logo?: Maybe<Scalars['String']>;
};

export type PageBlocksWho_We_Work_With = {
  __typename?: 'PageBlocksWho_we_work_with';
  heading?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['JSON']>;
  charities?: Maybe<Array<Maybe<PageBlocksWho_We_Work_WithCharities>>>;
};

export type PageBlocksWhy_Rg = {
  __typename?: 'PageBlocksWhy_rg';
  heading?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['JSON']>;
};

export type PageBlocks = PageBlocksCall_To_Action | PageBlocksMeet_The_Team | PageBlocksOur_Services | PageBlocksPowered_By_Data | PageBlocksWho_We_Work_With | PageBlocksWhy_Rg;

export type Page = {
  __typename?: 'Page';
  seo_data?: Maybe<PageSeo_Data>;
  hero?: Maybe<PageHero>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
};

export type PageDocument = Node & Document & {
  __typename?: 'PageDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Page;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<PageDocument>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type LegalSeo_Data = {
  __typename?: 'LegalSeo_data';
  meta_title?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_canonical?: Maybe<Scalars['String']>;
};

export type LegalHero = {
  __typename?: 'LegalHero';
  hero_heading?: Maybe<Scalars['String']>;
  hero_description?: Maybe<Scalars['String']>;
};

export type Legal = {
  __typename?: 'Legal';
  seo_data?: Maybe<LegalSeo_Data>;
  hero?: Maybe<LegalHero>;
  body?: Maybe<Scalars['JSON']>;
};

export type LegalDocument = Node & Document & {
  __typename?: 'LegalDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Legal;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type LegalConnectionEdges = {
  __typename?: 'LegalConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<LegalDocument>;
};

export type LegalConnection = Connection & {
  __typename?: 'LegalConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<LegalConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePageDocument: PageDocument;
  createPageDocument: PageDocument;
  updateLegalDocument: LegalDocument;
  createLegalDocument: LegalDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationUpdateLegalDocumentArgs = {
  relativePath: Scalars['String'];
  params: LegalMutation;
};


export type MutationCreateLegalDocumentArgs = {
  relativePath: Scalars['String'];
  params: LegalMutation;
};

export type DocumentMutation = {
  page?: InputMaybe<PageMutation>;
  legal?: InputMaybe<LegalMutation>;
};

export type PageSeo_DataMutation = {
  meta_title?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_canonical?: InputMaybe<Scalars['String']>;
};

export type PageHeroMutation = {
  hero_heading?: InputMaybe<Scalars['String']>;
  hero_description?: InputMaybe<Scalars['JSON']>;
  hero_button_text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCall_To_ActionMutation = {
  heading?: InputMaybe<Scalars['String']>;
  button_text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksMeet_The_TeamTeam_MembersMutation = {
  name?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  avatar?: InputMaybe<Scalars['String']>;
};

export type PageBlocksMeet_The_TeamMutation = {
  heading?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  team_members?: InputMaybe<Array<InputMaybe<PageBlocksMeet_The_TeamTeam_MembersMutation>>>;
};

export type PageBlocksOur_ServicesServicesMutation = {
  service_title?: InputMaybe<Scalars['String']>;
  service_description?: InputMaybe<Scalars['String']>;
};

export type PageBlocksOur_ServicesMutation = {
  heading?: InputMaybe<Scalars['String']>;
  services_description?: InputMaybe<Scalars['JSON']>;
  services?: InputMaybe<Array<InputMaybe<PageBlocksOur_ServicesServicesMutation>>>;
  services_mission?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPowered_By_DataMutation = {
  heading?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksWho_We_Work_WithCharitiesMutation = {
  charity_name?: InputMaybe<Scalars['String']>;
  charity_logo?: InputMaybe<Scalars['String']>;
};

export type PageBlocksWho_We_Work_WithMutation = {
  heading?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['JSON']>;
  charities?: InputMaybe<Array<InputMaybe<PageBlocksWho_We_Work_WithCharitiesMutation>>>;
};

export type PageBlocksWhy_RgMutation = {
  heading?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksMutation = {
  call_to_action?: InputMaybe<PageBlocksCall_To_ActionMutation>;
  meet_the_team?: InputMaybe<PageBlocksMeet_The_TeamMutation>;
  our_services?: InputMaybe<PageBlocksOur_ServicesMutation>;
  powered_by_data?: InputMaybe<PageBlocksPowered_By_DataMutation>;
  who_we_work_with?: InputMaybe<PageBlocksWho_We_Work_WithMutation>;
  why_rg?: InputMaybe<PageBlocksWhy_RgMutation>;
};

export type PageMutation = {
  seo_data?: InputMaybe<PageSeo_DataMutation>;
  hero?: InputMaybe<PageHeroMutation>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type LegalSeo_DataMutation = {
  meta_title?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_canonical?: InputMaybe<Scalars['String']>;
};

export type LegalHeroMutation = {
  hero_heading?: InputMaybe<Scalars['String']>;
  hero_description?: InputMaybe<Scalars['String']>;
};

export type LegalMutation = {
  seo_data?: InputMaybe<LegalSeo_DataMutation>;
  hero?: InputMaybe<LegalHeroMutation>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type PagePartsFragment = { __typename?: 'Page', seo_data?: { __typename: 'PageSeo_data', meta_title?: string | null | undefined, meta_description?: string | null | undefined, meta_canonical?: string | null | undefined } | null | undefined, hero?: { __typename: 'PageHero', hero_heading?: string | null | undefined, hero_description?: any | null | undefined, hero_button_text?: string | null | undefined } | null | undefined, blocks?: Array<{ __typename: 'PageBlocksCall_to_action', heading?: string | null | undefined, button_text?: string | null | undefined } | { __typename: 'PageBlocksMeet_the_team', heading?: string | null | undefined, description?: string | null | undefined, team_members?: Array<{ __typename: 'PageBlocksMeet_the_teamTeam_members', name?: string | null | undefined, position?: string | null | undefined, avatar?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksOur_services', heading?: string | null | undefined, services_description?: any | null | undefined, services_mission?: string | null | undefined, services?: Array<{ __typename: 'PageBlocksOur_servicesServices', service_title?: string | null | undefined, service_description?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksPowered_by_data', heading?: string | null | undefined, content?: any | null | undefined } | { __typename: 'PageBlocksWho_we_work_with', heading?: string | null | undefined, content?: any | null | undefined, charities?: Array<{ __typename: 'PageBlocksWho_we_work_withCharities', charity_name?: string | null | undefined, charity_logo?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksWhy_rg', heading?: string | null | undefined, content?: any | null | undefined } | null | undefined> | null | undefined };

export type LegalPartsFragment = { __typename?: 'Legal', body?: any | null | undefined, seo_data?: { __typename: 'LegalSeo_data', meta_title?: string | null | undefined, meta_description?: string | null | undefined, meta_canonical?: string | null | undefined } | null | undefined, hero?: { __typename: 'LegalHero', hero_heading?: string | null | undefined, hero_description?: string | null | undefined } | null | undefined };

export type GetPageDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetPageDocumentQuery = { __typename?: 'Query', getPageDocument: { __typename?: 'PageDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Page', seo_data?: { __typename: 'PageSeo_data', meta_title?: string | null | undefined, meta_description?: string | null | undefined, meta_canonical?: string | null | undefined } | null | undefined, hero?: { __typename: 'PageHero', hero_heading?: string | null | undefined, hero_description?: any | null | undefined, hero_button_text?: string | null | undefined } | null | undefined, blocks?: Array<{ __typename: 'PageBlocksCall_to_action', heading?: string | null | undefined, button_text?: string | null | undefined } | { __typename: 'PageBlocksMeet_the_team', heading?: string | null | undefined, description?: string | null | undefined, team_members?: Array<{ __typename: 'PageBlocksMeet_the_teamTeam_members', name?: string | null | undefined, position?: string | null | undefined, avatar?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksOur_services', heading?: string | null | undefined, services_description?: any | null | undefined, services_mission?: string | null | undefined, services?: Array<{ __typename: 'PageBlocksOur_servicesServices', service_title?: string | null | undefined, service_description?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksPowered_by_data', heading?: string | null | undefined, content?: any | null | undefined } | { __typename: 'PageBlocksWho_we_work_with', heading?: string | null | undefined, content?: any | null | undefined, charities?: Array<{ __typename: 'PageBlocksWho_we_work_withCharities', charity_name?: string | null | undefined, charity_logo?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksWhy_rg', heading?: string | null | undefined, content?: any | null | undefined } | null | undefined> | null | undefined } } };

export type GetPageListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPageListQuery = { __typename?: 'Query', getPageList: { __typename?: 'PageConnection', totalCount: number, edges?: Array<{ __typename?: 'PageConnectionEdges', node?: { __typename?: 'PageDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Page', seo_data?: { __typename: 'PageSeo_data', meta_title?: string | null | undefined, meta_description?: string | null | undefined, meta_canonical?: string | null | undefined } | null | undefined, hero?: { __typename: 'PageHero', hero_heading?: string | null | undefined, hero_description?: any | null | undefined, hero_button_text?: string | null | undefined } | null | undefined, blocks?: Array<{ __typename: 'PageBlocksCall_to_action', heading?: string | null | undefined, button_text?: string | null | undefined } | { __typename: 'PageBlocksMeet_the_team', heading?: string | null | undefined, description?: string | null | undefined, team_members?: Array<{ __typename: 'PageBlocksMeet_the_teamTeam_members', name?: string | null | undefined, position?: string | null | undefined, avatar?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksOur_services', heading?: string | null | undefined, services_description?: any | null | undefined, services_mission?: string | null | undefined, services?: Array<{ __typename: 'PageBlocksOur_servicesServices', service_title?: string | null | undefined, service_description?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksPowered_by_data', heading?: string | null | undefined, content?: any | null | undefined } | { __typename: 'PageBlocksWho_we_work_with', heading?: string | null | undefined, content?: any | null | undefined, charities?: Array<{ __typename: 'PageBlocksWho_we_work_withCharities', charity_name?: string | null | undefined, charity_logo?: string | null | undefined } | null | undefined> | null | undefined } | { __typename: 'PageBlocksWhy_rg', heading?: string | null | undefined, content?: any | null | undefined } | null | undefined> | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export type GetLegalDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetLegalDocumentQuery = { __typename?: 'Query', getLegalDocument: { __typename?: 'LegalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Legal', body?: any | null | undefined, seo_data?: { __typename: 'LegalSeo_data', meta_title?: string | null | undefined, meta_description?: string | null | undefined, meta_canonical?: string | null | undefined } | null | undefined, hero?: { __typename: 'LegalHero', hero_heading?: string | null | undefined, hero_description?: string | null | undefined } | null | undefined } } };

export type GetLegalListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLegalListQuery = { __typename?: 'Query', getLegalList: { __typename?: 'LegalConnection', totalCount: number, edges?: Array<{ __typename?: 'LegalConnectionEdges', node?: { __typename?: 'LegalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Legal', body?: any | null | undefined, seo_data?: { __typename: 'LegalSeo_data', meta_title?: string | null | undefined, meta_description?: string | null | undefined, meta_canonical?: string | null | undefined } | null | undefined, hero?: { __typename: 'LegalHero', hero_heading?: string | null | undefined, hero_description?: string | null | undefined } | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  seo_data {
    __typename
    meta_title
    meta_description
    meta_canonical
  }
  hero {
    __typename
    hero_heading
    hero_description
    hero_button_text
  }
  blocks {
    __typename
    ... on PageBlocksCall_to_action {
      heading
      button_text
    }
    ... on PageBlocksMeet_the_team {
      heading
      description
      team_members {
        __typename
        name
        position
        avatar
      }
    }
    ... on PageBlocksOur_services {
      heading
      services_description
      services {
        __typename
        service_title
        service_description
      }
      services_mission
    }
    ... on PageBlocksPowered_by_data {
      heading
      content
    }
    ... on PageBlocksWho_we_work_with {
      heading
      content
      charities {
        __typename
        charity_name
        charity_logo
      }
    }
    ... on PageBlocksWhy_rg {
      heading
      content
    }
  }
}
    `;
export const LegalPartsFragmentDoc = gql`
    fragment LegalParts on Legal {
  seo_data {
    __typename
    meta_title
    meta_description
    meta_canonical
  }
  hero {
    __typename
    hero_heading
    hero_description
  }
  body
}
    `;
export const GetPageDocumentDocument = gql`
    query getPageDocument($relativePath: String!) {
  getPageDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...PageParts
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const GetPageListDocument = gql`
    query getPageList {
  getPageList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...PageParts
        }
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const GetLegalDocumentDocument = gql`
    query getLegalDocument($relativePath: String!) {
  getLegalDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...LegalParts
    }
  }
}
    ${LegalPartsFragmentDoc}`;
export const GetLegalListDocument = gql`
    query getLegalList {
  getLegalList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...LegalParts
        }
      }
    }
  }
}
    ${LegalPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getPageDocument(variables: GetPageDocumentQueryVariables, options?: C): Promise<{data: GetPageDocumentQuery, variables: GetPageDocumentQueryVariables, query: string}> {
        return requester<{data: GetPageDocumentQuery, variables: GetPageDocumentQueryVariables, query: string}, GetPageDocumentQueryVariables>(GetPageDocumentDocument, variables, options);
      },
    getPageList(variables?: GetPageListQueryVariables, options?: C): Promise<{data: GetPageListQuery, variables: GetPageListQueryVariables, query: string}> {
        return requester<{data: GetPageListQuery, variables: GetPageListQueryVariables, query: string}, GetPageListQueryVariables>(GetPageListDocument, variables, options);
      },
    getLegalDocument(variables: GetLegalDocumentQueryVariables, options?: C): Promise<{data: GetLegalDocumentQuery, variables: GetLegalDocumentQueryVariables, query: string}> {
        return requester<{data: GetLegalDocumentQuery, variables: GetLegalDocumentQueryVariables, query: string}, GetLegalDocumentQueryVariables>(GetLegalDocumentDocument, variables, options);
      },
    getLegalList(variables?: GetLegalListQueryVariables, options?: C): Promise<{data: GetLegalListQuery, variables: GetLegalListQueryVariables, query: string}> {
        return requester<{data: GetLegalListQuery, variables: GetLegalListQueryVariables, query: string}, GetLegalListQueryVariables>(GetLegalListDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

