# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  sys: SystemInfo
  id: ID!
  form: JSON!
  values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
}

type Query {
  getCollection(collection: String): Collection!
  getCollections: [Collection!]!
  node(id: String): Node!
  getDocument(collection: String, relativePath: String): DocumentNode!
  getDocumentList(before: String, after: String, first: Float, last: Float): DocumentConnection!
  getDocumentFields: JSON!
  getHomepageDocument(relativePath: String): HomepageDocument!
  getHomepageList(before: String, after: String, first: Float, last: Float): HomepageConnection!
  getPrivacyDocument(relativePath: String): PrivacyDocument!
  getPrivacyList(before: String, after: String, first: Float, last: Float): PrivacyConnection!
}

type DocumentConnectionEdges {
  cursor: String
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float): DocumentConnection!
}

union DocumentNode = HomepageDocument | PrivacyDocument

type HomepageSeo_data {
  meta_title: String
  meta_description: String
  meta_canonical: String
}

type HomepageHero {
  hero_heading: String
  hero_description: String
  hero_button_text: String
}

type HomepageContent_sectionsCall_to_action {
  heading: String
  button_text: String
}

type HomepageContent_sectionsMeet_the_teamTeam_members {
  name: String
  position: String
  avatar: String
}

type HomepageContent_sectionsMeet_the_team {
  heading: String
  description: String
  team_members: [HomepageContent_sectionsMeet_the_teamTeam_members]
}

type HomepageContent_sectionsOur_servicesTeam_members {
  service_title: String
  service_description: String
}

type HomepageContent_sectionsOur_services {
  heading: String
  description: String
  team_members: [HomepageContent_sectionsOur_servicesTeam_members]
}

type HomepageContent_sectionsPowered_by_data {
  heading: String
  content: JSON
}

type HomepageContent_sectionsWho_we_work_withCharities {
  charity_name: String
  charity_logo: String
}

type HomepageContent_sectionsWho_we_work_with {
  heading: String
  content: JSON
  charities: [HomepageContent_sectionsWho_we_work_withCharities]
}

type HomepageContent_sectionsWhy_rg {
  heading: String
  content: JSON
}

union HomepageContent_sections = HomepageContent_sectionsCall_to_action | HomepageContent_sectionsMeet_the_team | HomepageContent_sectionsOur_services | HomepageContent_sectionsPowered_by_data | HomepageContent_sectionsWho_we_work_with | HomepageContent_sectionsWhy_rg

type Homepage {
  seo_data: HomepageSeo_data
  hero: HomepageHero
  content_sections: [HomepageContent_sections]
}

type HomepageDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Homepage!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type HomepageConnectionEdges {
  cursor: String
  node: HomepageDocument
}

type HomepageConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [HomepageConnectionEdges]
}

type PrivacyPrivacy_seo_data {
  meta_title: String
  meta_description: String
  meta_canonical: String
}

type PrivacyPrivacy_hero {
  hero_heading: String
  hero_description: String
  hero_button_text: String
}

type Privacy {
  privacy_seo_data: PrivacyPrivacy_seo_data
  privacy_hero: PrivacyPrivacy_hero
  body: JSON
}

type PrivacyDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Privacy!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type PrivacyConnectionEdges {
  cursor: String
  node: PrivacyDocument
}

type PrivacyConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [PrivacyConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateHomepageDocument(relativePath: String!, params: HomepageMutation!): HomepageDocument!
  createHomepageDocument(relativePath: String!, params: HomepageMutation!): HomepageDocument!
  updatePrivacyDocument(relativePath: String!, params: PrivacyMutation!): PrivacyDocument!
  createPrivacyDocument(relativePath: String!, params: PrivacyMutation!): PrivacyDocument!
}

input DocumentMutation {
  homepage: HomepageMutation
  privacy: PrivacyMutation
}

input HomepageSeo_dataMutation {
  meta_title: String
  meta_description: String
  meta_canonical: String
}

input HomepageHeroMutation {
  hero_heading: String
  hero_description: String
  hero_button_text: String
}

input HomepageContent_sectionsCall_to_actionMutation {
  heading: String
  button_text: String
}

input HomepageContent_sectionsMeet_the_teamTeam_membersMutation {
  name: String
  position: String
  avatar: String
}

input HomepageContent_sectionsMeet_the_teamMutation {
  heading: String
  description: String
  team_members: [HomepageContent_sectionsMeet_the_teamTeam_membersMutation]
}

input HomepageContent_sectionsOur_servicesTeam_membersMutation {
  service_title: String
  service_description: String
}

input HomepageContent_sectionsOur_servicesMutation {
  heading: String
  description: String
  team_members: [HomepageContent_sectionsOur_servicesTeam_membersMutation]
}

input HomepageContent_sectionsPowered_by_dataMutation {
  heading: String
  content: JSON
}

input HomepageContent_sectionsWho_we_work_withCharitiesMutation {
  charity_name: String
  charity_logo: String
}

input HomepageContent_sectionsWho_we_work_withMutation {
  heading: String
  content: JSON
  charities: [HomepageContent_sectionsWho_we_work_withCharitiesMutation]
}

input HomepageContent_sectionsWhy_rgMutation {
  heading: String
  content: JSON
}

input HomepageContent_sectionsMutation {
  call_to_action: HomepageContent_sectionsCall_to_actionMutation
  meet_the_team: HomepageContent_sectionsMeet_the_teamMutation
  our_services: HomepageContent_sectionsOur_servicesMutation
  powered_by_data: HomepageContent_sectionsPowered_by_dataMutation
  who_we_work_with: HomepageContent_sectionsWho_we_work_withMutation
  why_rg: HomepageContent_sectionsWhy_rgMutation
}

input HomepageMutation {
  seo_data: HomepageSeo_dataMutation
  hero: HomepageHeroMutation
  content_sections: [HomepageContent_sectionsMutation]
}

input PrivacyPrivacy_seo_dataMutation {
  meta_title: String
  meta_description: String
  meta_canonical: String
}

input PrivacyPrivacy_heroMutation {
  hero_heading: String
  hero_description: String
  hero_button_text: String
}

input PrivacyMutation {
  privacy_seo_data: PrivacyPrivacy_seo_dataMutation
  privacy_hero: PrivacyPrivacy_heroMutation
  body: JSON
}

schema {
  query: Query
  mutation: Mutation
}
  